services:
  web:
    build: .
    container_name: molt-log-web
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:5777}
      - PORT=5777
      - S3_ENDPOINT=${S3_ENDPOINT:-http://minio:9000}
      - S3_PUBLIC_URL=${S3_PUBLIC_URL:-http://localhost:9000}
      - S3_BUCKET=${S3_BUCKET:-molt-uploads}
      - S3_REGION=${S3_REGION:-us-east-1}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY:-minioadmin}
      - S3_SECRET_KEY=${S3_SECRET_KEY:-minioadmin}
      - S3_FORCE_PATH_STYLE=${S3_FORCE_PATH_STYLE:-true}
    ports:
      - "5777:5777"
    depends_on:
      - mongo
      - minio

  mongo:
    image: mongo:8
    container_name: molt-log-mongo
    restart: unless-stopped
    command: ["mongod", "--port", "13777", "--bind_ip_all"]
    environment:
      - MONGO_INITDB_DATABASE=molt-log
    ports:
      - "13777:13777"
    volumes:
      - mongo-data:/data/db

  minio:
    image: minio/minio:latest
    container_name: molt-log-minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${S3_ACCESS_KEY:-minioadmin}
      - MINIO_ROOT_PASSWORD=${S3_SECRET_KEY:-minioadmin}
    ports:
      - "9000:9000"  # S3 API
      - "9001:9001"  # MinIO Console
    volumes:
      - minio-data:/data

  minio-setup:
    image: minio/mc:latest
    container_name: molt-log-minio-setup
    depends_on:
      - minio
    entrypoint: ["/bin/sh","-c"]
    environment:
      - S3_BUCKET=${S3_BUCKET:-molt-uploads}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY:-minioadmin}
      - S3_SECRET_KEY=${S3_SECRET_KEY:-minioadmin}
    command: |
      "set -e
      mc alias set local http://minio:9000 $S3_ACCESS_KEY $S3_SECRET_KEY
      mc mb -p local/$S3_BUCKET || true
      mc anonymous set download local/$S3_BUCKET
      echo Bucket '$S3_BUCKET' ready"
    restart: "no"

volumes:
  mongo-data:
  minio-data:
