services:
  traefik:
    image: traefik:latest
    container_name: moltly-traefik
    restart: unless-stopped
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.le.acme.email=${LETSENCRYPT_EMAIL:-contact@moltly.xyz}
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-data:/letsencrypt

  web:
    build: .
    container_name: molt-log-web
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:5777}
      - PORT=5777
      - S3_ENDPOINT=${S3_ENDPOINT:-http://minio:9000}
      - S3_PUBLIC_URL=${S3_PUBLIC_URL:-http://localhost:9000}
      - S3_BUCKET=${S3_BUCKET:-molt-uploads}
      - S3_REGION=${S3_REGION:-us-east-1}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY:-minioadmin}
      - S3_SECRET_KEY=${S3_SECRET_KEY:-minioadmin}
      - S3_FORCE_PATH_STYLE=${S3_FORCE_PATH_STYLE:-true}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`moltly.xyz`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls=true"
      - "traefik.http.routers.web.tls.certresolver=le"
      - "traefik.http.services.web.loadbalancer.server.port=5777"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.web-http.rule=Host(`moltly.xyz`)"
      - "traefik.http.routers.web-http.entrypoints=web"
      - "traefik.http.routers.web-http.middlewares=redirect-to-https"
    depends_on:
      - mongo
      - minio

  mongo:
    image: mongo:8
    container_name: molt-log-mongo
    restart: unless-stopped
    command: ["mongod", "--port", "13777", "--bind_ip_all"]
    environment:
      - MONGO_INITDB_DATABASE=molt-log
    ports:
      - "13777:13777"
    volumes:
      - mongo-data:/data/db

  minio:
    image: minio/minio:latest
    container_name: molt-log-minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${S3_ACCESS_KEY:-minioadmin}
      - MINIO_ROOT_PASSWORD=${S3_SECRET_KEY:-minioadmin}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio.rule=Host(`image.moltly.xyz`)"
      - "traefik.http.routers.minio.entrypoints=websecure"
      - "traefik.http.routers.minio.tls=true"
      - "traefik.http.routers.minio.tls.certresolver=le"
      - "traefik.http.services.minio.loadbalancer.server.port=9000"
      - "traefik.http.routers.minio-http.rule=Host(`image.moltly.xyz`)"
      - "traefik.http.routers.minio-http.entrypoints=web"
      - "traefik.http.routers.minio-http.middlewares=redirect-to-https"
    volumes:
      - minio-data:/data

  minio-setup:
    image: minio/mc:latest
    container_name: molt-log-minio-setup
    depends_on:
      - minio
    entrypoint: ["/bin/sh","-c"]
    environment:
      - S3_BUCKET=${S3_BUCKET:-molt-uploads}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY:-minioadmin}
      - S3_SECRET_KEY=${S3_SECRET_KEY:-minioadmin}
    command: |
      "set -e
      mc alias set local http://minio:9000 $S3_ACCESS_KEY $S3_SECRET_KEY
      mc mb -p local/$S3_BUCKET || true
      mc anonymous set download local/$S3_BUCKET
      echo Bucket '$S3_BUCKET' ready"
    restart: "no"

volumes:
  mongo-data:
  minio-data:
  traefik-data:
